<UserControl x:Class="PathFindingVisualisation.View.CellGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PathFindingVisualisation.View"
             mc:Ignorable="d" 
             xmlns:Converters="clr-namespace:PathFindingVisualisation.Converters"
             xmlns:Model="clr-namespace:PathFindingVisualisation.Model"
             xmlns:ViewModel="clr-namespace:PathFindingVisualisation.ViewModel"
             xmlns:View="clr-namespace:PathFindingVisualisation.View"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             d:DataContext="{d:DesignInstance Type=ViewModel:CellGridViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Converters:CellClickEventConverter x:Key="CellClickArgConverter"/>
        <Converters:LocationConverter x:Key="LocationConverter" />
        <sys:Double x:Key="CellSize">50</sys:Double>
        <Style x:Key="tete1">
            <Setter Property="Canvas.Top" Value="{Binding Location.X, 
                                    Converter={StaticResource LocationConverter},
                                    ConverterParameter={StaticResource CellSize}}"/>
            <Setter Property="Canvas.Left" Value="{Binding Location.Y, 
                                    Converter={StaticResource LocationConverter},
                                    ConverterParameter={StaticResource CellSize}}"/>
        </Style>
        <Style x:Key="tete2">
            <Setter Property="FrameworkElement.RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
                        <SkewTransform/>
                        <RotateTransform Angle="0" />
                        <TranslateTransform 
                                X="{Binding Location.X, 
                                    Converter={StaticResource LocationConverter},
                                    ConverterParameter={StaticResource CellSize}}" 
                                Y="{Binding Location.Y, 
                                    Converter={StaticResource LocationConverter},
                                    ConverterParameter={StaticResource CellSize}}"/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <ItemsControl  ItemsSource="{Binding Cells}" 
                  VerticalAlignment="Top" HorizontalAlignment="Left"
                  ItemContainerStyle="{StaticResource ResourceKey=tete1}">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <View:CanvasAutoSize/>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type ViewModel:CellViewModel}">
                <View:Cell DataContext="{Binding}"/>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseDown">
                <i:InvokeCommandAction 
                        Command="{Binding CellMouseDownCommand}"
                        PassEventArgsToCommand="True"
                        EventArgsConverter="{StaticResource CellClickArgConverter}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseUp">
                <i:InvokeCommandAction 
                        Command="{Binding CellMouseUpCommand}"
                        PassEventArgsToCommand="True"
                        EventArgsConverter="{StaticResource CellClickArgConverter}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="PreviewMouseMove">
                <i:InvokeCommandAction 
                        Command="{Binding CellMouseMoveCommand}"
                        PassEventArgsToCommand="True"
                        EventArgsConverter="{StaticResource CellClickArgConverter}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </ItemsControl>
</UserControl>
